from typing import Any
from utils.BASE_URL import BASE_URL
from mcp_server import mcp
import logging
from helpers.make_request import make_request
from utils.obter_info_func import get_func_info

@mcp.tool()
async def buscar_plano_curso_disciplina(curso: Any, disciplina: Any, turma: Any, periodo_de: Any, periodo_ate: Any) -> list[dict]:
    """
    Retorna o plano de ensino (ementa, objetivos, conte√∫do, metodologia, avalia√ß√£o e refer√™ncias) 
    de uma disciplina espec√≠fica de um curso da UFCG, dentro de um intervalo de per√≠odos e para uma turma.

    Args:
        curso (Any): C√≥digo do curso.
        disciplina (Any): C√≥digo da disciplina.
        turma (Any): N√∫mero da turma.
        periodo_de (Any): Per√≠odo inicial (ex.: "2020.1").
        periodo_ate (Any): Per√≠odo final (ex.: "2024.2").

    Returns:
        list[dict]: Lista com informa√ß√µes detalhadas do plano de curso, no formato:
            {
                "turma": int,                        # N√∫mero da turma
                "codigo_da_disciplina": int,          # C√≥digo da disciplina
                "nome_da_disciplina": str,            # Nome da disciplina
                "codigo_do_setor": int,               # C√≥digo do setor respons√°vel
                "nome_do_setor": str,                 # Nome do setor respons√°vel
                "periodo": str,                        # Per√≠odo da disciplina (ex.: "2020.1")
                "ementa": str,                         # Ementa da disciplina
                "objetivos": str,                       # Objetivos de aprendizagem
                "conteudo": str,                        # Conte√∫do program√°tico detalhado
                "metodologia": str,                     # Metodologia de ensino utilizada
                "avaliacao": str,                       # Crit√©rios de avalia√ß√£o
                "referencias": str                      # Refer√™ncias bibliogr√°ficas
            }
    """

    params = { 
        "curso": curso,
        "disciplina": disciplina,
        "periodo-de": periodo_de,
        "periodo_ate": periodo_ate,
        "turma": turma
    }

    func_name, parametros_str = get_func_info()
    url = f"{BASE_URL}/planos-de-curso"

    try:
        logging.info(f"üîç Chamando {func_name}({parametros_str})")
        data = await make_request(url, params)

        if not data:
            return "N√£o foi poss√≠vel obter o plano de curso ou nenhum plano de curso foi encontrada"
 
        return data
    except Exception as e:
        import traceback
        print(f"‚ùåTool {func_name} deu erro:", e)
        traceback.print_exc()
        raise
        
